{"kind":"Notebook","sha256":"e41a8032a1026476a9a977ed113badbb7fe58038d01f1c43a1d3a4b6f748cb18","slug":"notebook","dependencies":[],"frontmatter":{"title":"Linking Interactive Notebooks","subtitle":"Evolve markdown documents and notebooks into structured data","authors":[{"name":"Rowan Cockett","orcid":"0000-0002-7859-8394","email":"rowan@curvenote.com","affiliations":["Executable Books","Curvenote"],"corresponding":true}],"date":"2023/01/23","license":{"code":{"id":"MIT","name":"MIT License","osi":true,"free":true,"url":"https://opensource.org/licenses/MIT"}},"github":"https://github.com/fpopineau/mybook","keywords":[],"exports":[{"format":"ipynb","filename":"02-notebook.ipynb","url":"/mybook/build/02-notebook-f7b895c115d97d9fda2dfd36c15d6274.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":13,"column":0},"end":{"line":15,"column":0}},"children":[{"type":"text","value":"MyST allows you to directly include Jupyter Notebooks in your books, documents and websites.\nThis Jupyter Notebook can be rendered directly using MyST.","key":"d8Zn9HbZT4"}],"key":"P89E7IJQS3"},{"type":"paragraph","position":{"start":{"line":16,"column":0},"end":{"line":17,"column":0}},"children":[{"type":"text","value":"For example, let us import ","key":"S3mxqG0Q9J"},{"type":"inlineCode","value":"altair","key":"S3eZri3Wnw"},{"type":"text","value":" and create a demo of an interactive plot!","key":"YZAT3qf3Pn"}],"key":"cCIGaYIO3I"}],"key":"tRyDEYDJtY"},{"type":"block","position":{"start":{"line":18,"column":0},"end":{"line":19,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"import altair as alt\nfrom vega_datasets import data\n\nsource = data.cars()\nbrush = alt.selection_interval(encodings=['x'])\npoints = alt.Chart(source).mark_point().encode(\n    x='Horsepower:Q',\n    y='Miles_per_Gallon:Q',\n    size='Acceleration',\n    color=alt.condition(brush, 'Origin:N', alt.value('lightgray'))\n).add_selection(brush)\n\nbars = alt.Chart(source).mark_bar().encode(\n    y='Origin:N',\n    color='Origin:N',\n    x='count(Origin):Q'\n).transform_filter(brush)","identifier":"nb-cell-1-code","enumerator":"1","html_id":"nb-cell-1-code","key":"YV1fptXaou"},{"type":"output","id":"ulUsydfw5nYhUNGIX0BcC","data":[{"ename":"ModuleNotFoundError","evalue":"No module named 'altair'","output_type":"error","traceback":"\u001b[1;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)\nCell \u001b[1;32mIn [1], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01maltair\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01malt\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mvega_datasets\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m data\n\u001b[0;32m      4\u001b[0m source \u001b[38;5;241m=\u001b[39m data\u001b[38;5;241m.\u001b[39mcars()\n\n\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'altair'"}],"identifier":"nb-cell-1-output","html_id":"nb-cell-1-output","key":"LyQl3JraZd"}],"data":{"id":"nb-cell-1","type":"notebook-code"},"identifier":"nb-cell-1","label":"nb-cell-1","html_id":"nb-cell-1","key":"ENBIJ3lycC"},{"type":"block","position":{"start":{"line":44,"column":0},"end":{"line":45,"column":0}},"children":[{"type":"paragraph","position":{"start":{"line":46,"column":0},"end":{"line":47,"column":0}},"children":[{"type":"text","value":"We can now plot the altair example, which is fully interactive, try dragging in the plot to select cars by their horsepower.","key":"SFNvvUSwXJ"}],"key":"dBXA7K14ms"}],"data":{"id":"nb-cell-2","type":"notebook-content"},"identifier":"nb-cell-2","label":"nb-cell-2","html_id":"nb-cell-2","key":"zvBRfd2H4D"},{"type":"block","position":{"start":{"line":48,"column":0},"end":{"line":49,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"points & bars","identifier":"horsepower-code","enumerator":"2","html_id":"horsepower-code","key":"dPYQPtMUkq"},{"type":"output","id":"FabcpoyU5Ozy67S9z5kO0","data":[{"ename":"NameError","evalue":"name 'points' is not defined","output_type":"error","traceback":"\u001b[1;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)\nCell \u001b[1;32mIn [2], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#| label: horsepower\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m \u001b[43mpoints\u001b[49m \u001b[38;5;241m&\u001b[39m bars\n\n\u001b[1;31mNameError\u001b[0m: name 'points' is not defined"}],"identifier":"horsepower-output","html_id":"horsepower-output","key":"Oqy3jqul3m"}],"data":{"id":"nb-cell-3","type":"notebook-code"},"identifier":"horsepower","label":"horsepower","html_id":"horsepower","key":"q2YxK8dCFB"},{"type":"block","position":{"start":{"line":59,"column":0},"end":{"line":60,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# https://matplotlib.org/stable/gallery/statistics/time_series_histogram.html#sphx-glr-gallery-statistics-time-series-histogram-py\nfrom copy import copy\n\nimport numpy as np\nimport numpy.matlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm","identifier":"nb-cell-4-code","enumerator":"3","html_id":"nb-cell-4-code","key":"k9W8DVwmqd"},{"type":"output","id":"T7YrnrUIF-2oZNtD6N1Jm","data":[],"identifier":"nb-cell-4-output","html_id":"nb-cell-4-output","key":"THZHFhXeMr"}],"data":{"id":"nb-cell-4","type":"notebook-code"},"identifier":"nb-cell-4","label":"nb-cell-4","html_id":"nb-cell-4","key":"jD0ewGHam9"},{"type":"block","position":{"start":{"line":75,"column":0},"end":{"line":76,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make some data; a 1D random walk + small fraction of sine waves\nnum_series = 1000\nnum_points = 100\nSNR = 0.10  # Signal to Noise Ratio\nx = np.linspace(0, 4 * np.pi, num_points)\n# Generate unbiased Gaussian random walks\nY = np.cumsum(np.random.randn(num_series, num_points), axis=-1)\n# Generate sinusoidal signals\nnum_signal = int(round(SNR * num_series))\nphi = (np.pi / 8) * np.random.randn(num_signal, 1)  # small random offset\nY[-num_signal:] = (\n    np.sqrt(np.arange(num_points))[None, :]  # random walk RMS scaling factor\n    * (np.sin(x[None, :] - phi)\n       + 0.05 * np.random.randn(num_signal, num_points))  # small random noise\n)\n\n\n# Now we will convert the multiple time series into a histogram. Not only will\n# the hidden signal be more visible, but it is also a much quicker procedure.\n# Linearly interpolate between the points in each time series\nnum_fine = 800\nx_fine = np.linspace(x.min(), x.max(), num_fine)\ny_fine = np.empty((num_series, num_fine), dtype=float)\nfor i in range(num_series):\n    y_fine[i, :] = np.interp(x_fine, x, Y[i, :])\ny_fine = y_fine.flatten()\nx_fine = np.matlib.repmat(x_fine, num_series, 1).flatten()","identifier":"nb-cell-5-code","enumerator":"4","html_id":"nb-cell-5-code","key":"mG8miaYMQy"},{"type":"output","id":"aX1kk1qpkWhOcWNNRyJGJ","data":[],"identifier":"nb-cell-5-output","html_id":"nb-cell-5-output","key":"XzuEPuyPbt"}],"data":{"id":"nb-cell-5","type":"notebook-code"},"identifier":"nb-cell-5","label":"nb-cell-5","html_id":"nb-cell-5","key":"lT2EjIYT5x"},{"type":"block","position":{"start":{"line":111,"column":0},"end":{"line":112,"column":0}},"children":[{"type":"paragraph","position":{"start":{"line":113,"column":0},"end":{"line":115,"column":0}},"children":[{"type":"text","value":"Important!\nThis data is simulated, and may just be random noise! ðŸ”Š","key":"OEHyzuaWKT"}],"key":"I9aVEfyigF"}],"data":{"id":"nb-cell-6","type":"notebook-content"},"identifier":"nb-cell-6","label":"nb-cell-6","html_id":"nb-cell-6","key":"HsYjbvg8qK"},{"type":"block","position":{"start":{"line":116,"column":0},"end":{"line":117,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axes = plt.subplots(figsize=(8, 4), constrained_layout=True)\ncmap = copy(plt.cm.plasma)\ncmap.set_bad(cmap(0))\nh, xedges, yedges = np.histogram2d(x_fine, y_fine, bins=[400, 100])\npcm = axes.pcolormesh(xedges, yedges, h.T, cmap=cmap,\n                         norm=LogNorm(vmax=1.5e2), rasterized=True)\nfig.colorbar(pcm, ax=axes, label=\"# points\", pad=0)\naxes.set_title(\"2d histogram and log color scale\");","identifier":"plasma-code","enumerator":"5","html_id":"plasma-code","key":"wxI3CixFty"},{"type":"output","id":"0sMQIdpl4XSPgqnfTgewh","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"650263ca10e86d7eade6c7d289ea0958","path":"/mybook/build/650263ca10e86d7eade6c7d289ea0958.png"},"text/plain":{"content":"<Figure size 800x400 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"plasma-output","html_id":"plasma-output","key":"gSoKcjexhK"}],"data":{"id":"nb-cell-7","type":"notebook-code"},"identifier":"plasma","label":"plasma","html_id":"plasma","key":"CUZl8j1rka"},{"type":"block","position":{"start":{"line":134,"column":0},"end":{"line":135,"column":0}},"children":[{"type":"code","lang":"python","executable":true,"identifier":"nb-cell-8-code","enumerator":"6","html_id":"nb-cell-8-code","key":"VJLzSyDF3C"},{"type":"output","id":"sX4SOLxyd-07LN_Ip4Uh5","data":[],"identifier":"nb-cell-8-output","html_id":"nb-cell-8-output","key":"PnL6OOHykx"}],"data":{"id":"nb-cell-8","type":"notebook-code"},"identifier":"nb-cell-8","label":"nb-cell-8","html_id":"nb-cell-8","key":"w1C4xDQocG"}],"key":"cCFb01EU9Z"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Notebook","url":"/my-book/nb1","group":"Part 2"}}},"domain":"http://localhost:3000","project":"my-book"}